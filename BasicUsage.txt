script "server.py" can process such request types: GET_FOLDER, SEARCH_DUPLICATE;
Request type must be separeted from first query param by onespace;


GET_FOLDER

Request of this type must contains query param - the folder subfolders of what you want to get;
Response contains all subfolders names of folder which you specify in qyuery param, names are separated by symbol "-";
In cases of wrong request param, unreachible or empty directory, server returns - b'EMPTY or UNREACHABLE FOLDER'

examples:
	request  ::  b'GET_FOLDER C:\\'
	response :: b'$Recycle.Bin-$WinREAgent-Config.Msi-Documents and Settings-Intel-MinGW-PerfLogs-Program Files-Program Files (x86)-ProgramData-Recovery-SWSetup-System Volume Information-system.sav-test1-Users-Windows-'
	
	request  ::  b'GET_FOLDER C:\\test1\\'
	response ::  b'test2-'

	request  ::  b'GET_FOLDER C:\\test1\\test2\\'
	response ::  b'EMPTY or UNREACHABLE FOLDER'



SEARCH_DUPLICATE

Request of this type must contains 2 query params - the folder where to serarch files, file hash(sha256) in human readble representaton 
**such representatoncan be created by hashlib.sha256(file.read()).hexdigest(); 
hashlib.sha256(file.read()).hexdigest() - this value will be used on server to check if files are match;
Response contains aubsolute paths of matchly files separeted by symbol "-"; 

examples:
	request  :: b'SEARCH_DUPLICATE C:\\test1\\ 93a74f25473f69161daae708270a28763e22f3314533955a2b2277a22ef1d95e'
	response :: b'C:\\test1\\t.jpg-C:\\test1\\test2\\test3\\CHiUyAcWUFg.jpg'

	request :: b'SEARCH_DUPLICATE C:\\test1\\ 701558a4de1fd6e411c82e6ee38df2683312b11c7270f9e99230ef79c987b419'
	response :: b'NO DUPLICATES FOUNDED'


SEARCH_SERVER_LOCATED_DUPLICATES

Request of this type must contain 1 query param -  the folder where to serarch duplicated files
Server response contains absolute pathes to duplicated files; 
duplicated files of type1 are separeted by "%"; 
files of type1 and type2 are separeted by "--";
**suppose you have 4 files; 2 of them(type1 :: 1.txt, 2.txt) have same hash and those 2 left(type2 :: 3.txt, 4.txt) also have same hash -> (1.txt == 2.txt) != (3.txt == 4.txt)

ecamples:
	request :: b'SEARCH_SERVER_LOCATED_DUPLICATES C:\\test1\\'
	response :: b'C:\test1\photo_2023-02-16_18-04-33.jpg%C:\test1\test2\photo_2023-02-16_18-04-33.jpg--C:\test1\t.jpg%C:\test1\test2\test3\CHiUyAcWUFg.jpg' 

	request :: b'SEARCH_SERVER_LOCATED_DUPLICATES '
	response :: b'ERROR'

	request :: b'SEARCH_SERVER_LOCA '
	response :: b'ERROR'
